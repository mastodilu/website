[{"content":"@ Accenture Spa\nThis is my current job.\n#FIXME\n","permalink":"http://mastodilu.github.io/jobs/05-custom-software-engineering-specialst/","summary":"@ Accenture Spa\nThis is my current job.\n#FIXME","title":"Custom Software Engineering Specialist"},{"content":"@ Accenture Spa\nDeveloped robust and scalable microservices released on GKE through a DevOps pipeline, where I participated in the coding of the applications, the creation of Helm charts, and entirely implemented the infrastructure side, including the logging and monitoring projects, following Google\u0026rsquo;s recommended best practices. Followed the phases of design, requirements gathering, development and maintenance of cloud infrastructures, paying attention on security, permissions and resource segregation, and constancly interacting with the client. ","permalink":"http://mastodilu.github.io/jobs/04-application-development-senior-analyst/","summary":"@ Accenture Spa\nDeveloped robust and scalable microservices released on GKE through a DevOps pipeline, where I participated in the coding of the applications, the creation of Helm charts, and entirely implemented the infrastructure side, including the logging and monitoring projects, following Google\u0026rsquo;s recommended best practices. Followed the phases of design, requirements gathering, development and maintenance of cloud infrastructures, paying attention on security, permissions and resource segregation, and constancly interacting with the client.","title":"Application Development Senior Analyst"},{"content":"@ Beta80 Spa\nImplemented a flow to handle alarms and critical events for Unicredit S.p.A. using Apache Nifi and its expression language. Alarms are gathered by a JMS queue, enriched with metadata and forwarded to a Fastweb Host in a CSV and to a Unicredit syslog server. The entire flow counts more than one hunded processors, is replicated on three nodes using zookeeper embedded and is capable of handling several thousands of alarms each minute having minimum impact on the nodes. The system is monitored using Nifi\u0026rsquo;s APIs. Simplified the enabling and disabling of VPN access for consultants of Fastweb SpA. The system is composed of a VueJS frontend and a Go server. User authentication is done querying the active directory and sessions are maintained with cookies. A PostgreSQL database stores all the data and allows the structuring of relations between employees and the groups of consultants they\u0026rsquo;re responsible for. Architected and automated the writing of templates of instructions to configure network equipment. Configurations are built through a responsive website using go templates and bootstrap and served with a Go server that stores data in two databases: PostgreSQL and MongoDB. The project is containerized using Podman. Implemented a classification script in Go that calls IBM\u0026rsquo;s Watson Natural Language APIs to fastly classify millions of records per CSV thanks to go multithreading. Introduced an artificial neural network to classify incoming tickets using a bag of word matrix with 5000 TF-IDF features as input of a 4 layer ANN built with Keras and Tensorflow. Built a classification model for a Milan University to classify students based on their probability to complete their studies there, using pandas, nltk, sklearn to fit a Support Vector Classifier to the data. The model was later refined with Grid Search Algorithm. ","permalink":"http://mastodilu.github.io/jobs/03-go-ai-developer/","summary":"@ Beta80 Spa\nImplemented a flow to handle alarms and critical events for Unicredit S.p.A. using Apache Nifi and its expression language. Alarms are gathered by a JMS queue, enriched with metadata and forwarded to a Fastweb Host in a CSV and to a Unicredit syslog server. The entire flow counts more than one hunded processors, is replicated on three nodes using zookeeper embedded and is capable of handling several thousands of alarms each minute having minimum impact on the nodes.","title":"Software Developer"},{"content":"@ Alpenite Spa\nEnthusiast java teacher at Alpenite\u0026rsquo;s Digital Academy, where I taught the basics of Java O.O., including inheritance, interfaces, polymorphism, abstract classes and generic types. Written a script in Java that generates static sitemaps by recursively exploring the subtrees of nodes of websites\u0026rsquo; structures in Adobe Experience Manager. ","permalink":"http://mastodilu.github.io/jobs/02-java-developer/","summary":"@ Alpenite Spa\nEnthusiast java teacher at Alpenite\u0026rsquo;s Digital Academy, where I taught the basics of Java O.O., including inheritance, interfaces, polymorphism, abstract classes and generic types. Written a script in Java that generates static sitemaps by recursively exploring the subtrees of nodes of websites\u0026rsquo; structures in Adobe Experience Manager. ","title":"Java Developer"},{"content":"@ Beta80 Spa\nBuilt a system to thack the history of raw materials from producer to customer, composed of: a responsive SPA (VueJS and Vuetify) a mobile app (Flutter) Ganache app as the ethereum blockchain for the transparent storage of information an API server (NodeJS) This project was discussed in my Bachelor of Science thesis.\n","permalink":"http://mastodilu.github.io/jobs/01-internship/","summary":"@ Beta80 Spa\nBuilt a system to thack the history of raw materials from producer to customer, composed of: a responsive SPA (VueJS and Vuetify) a mobile app (Flutter) Ganache app as the ethereum blockchain for the transparent storage of information an API server (NodeJS) This project was discussed in my Bachelor of Science thesis.","title":"Tech internship"}]